bg = palette[2]) %>%
sprinkle(border = "bottom",
border_color = "gray") %>%
print(asis = FALSE) %>%
cat()
mtcars %>%
arrange(gear) %>%
dust(caption = "Vehicular Data Sorted by Gear",
label = "basic-group") %>%
medley_bw() %>%
print(asis = TRUE) %>%
cat()
set_pixie_count(0)
bookdown::render_book("index.Rmd",
output_dir = getwd())
set_pixie_count(0)
bookdown::render_book("index.Rmd",
output_dir = getwd())
set_pixie_count(0)
bookdown::render_book("index.Rmd",
output_dir = getwd())
set_pixie_count(0)
bookdown::render_book("index.Rmd",
output_dir = getwd())
set_pixie_count(0)
bookdown::render_book("index.Rmd",
output_dir = getwd())
set_pixie_count(0)
bookdown::render_book("index.Rmd",
output_dir = getwd())
set_pixie_count(0)
bookdown::render_book("index.Rmd",
output_dir = getwd())
?render_book
split(mtcars,
mtcars$gear) %>%
lapply(FUN = function(x) bind_rows(data.frame(mpg = x$gear),
x))
split(mtcars,
mtcars$gear) %>%
lapply(FUN = function(x) bind_rows(data.frame(mpg = x$gear),
x))
split(mtcars,
mtcars$gear) %>%
lapply(FUN = function(x) bind_rows(data.frame(mpg = x$gear[1]),
x))
split(mtcars,
mtcars$gear) %>%
lapply(FUN = function(x) bind_rows(data.frame(mpg = x$gear[1]),
x)) %>%
bind_rows()
split(mtcars,
mtcars$gear) %>%
lapply(FUN = function(x) bind_rows(data.frame(mpg = x$gear[1]),
x)) %>%
bind_rows() %>%
dust(caption = "Table Sectioned with a Row Barrier",
label = "row-barrier") %>%
sprinkle(logical_rows = quote(is.na(gear)),
cols = "mpg",
fn = quote(sprintf("Gear = %s", value)))
split(mtcars,
mtcars$gear) %>%
lapply(FUN = function(x) bind_rows(data.frame(mpg = x$gear[1]),
x)) %>%
bind_rows() %>%
dust(caption = "Table Sectioned with a Row Barrier",
label = "row-barrier") %>%
sprinkle(logical_rows = quote(is.na(gear)),
cols = "mpg",
fn = quote(sprintf("Gear = %s", value)),
merge = TRUE)
set_pixie_count(0)
bookdown::render_book("index.Rmd",
output_dir = getwd())
set_pixie_count(0)
bookdown::render_book("index.Rmd",
output_dir = getwd())
split(mtcars,
mtcars$gear) %>%
lapply(FUN = function(x) bind_rows(data.frame(mpg = x$gear[1]),
x)) %>%
bind_rows() %>%
dust(caption = "Table Sectioned with a Row Barrier",
label = "row-barrier") %>%
sprinkle(logical_rows = quote(is.na(gear)),
cols = "mpg",
fn = quote(sprintf("Gear = %s", value))) %>%
sprinkle(logical_rows = quote(is.na(gear) & mpg == 3),
merge == TRUE) %>%
sprinkle(logical_rows = quote(is.na(gear) & mpg == 4),
merge == TRUE) %>%
sprinkle(logical_rows = quote(is.na(gear) & mpg == 5),
merge == TRUE)
split(mtcars,
mtcars$gear) %>%
lapply(FUN = function(x) bind_rows(data.frame(mpg = x$gear[1]),
x)) %>%
bind_rows() %>%
dust(caption = "Table Sectioned with a Row Barrier",
label = "row-barrier") %>%
sprinkle(logical_rows = quote(is.na(gear)),
cols = "mpg",
fn = quote(sprintf("Gear = %s", value))) %>%
sprinkle(logical_rows = quote(is.na(gear) & mpg == 3),
merge = TRUE) %>%
sprinkle(logical_rows = quote(is.na(gear) & mpg == 4),
merge = TRUE) %>%
sprinkle(logical_rows = quote(is.na(gear) & mpg == 5),
merge = TRUE)
split(mtcars,
mtcars$gear) %>%
lapply(FUN = function(x) bind_rows(data.frame(mpg = x$gear[1]),
x)) %>%
bind_rows() %>%
dust(caption = "Table Sectioned with a Row Barrier",
label = "row-barrier") %>%
sprinkle(logical_rows = quote(is.na(gear)),
cols = "mpg",
fn = quote(sprintf("Gear = %s", value))) %>%
sprinkle(logical_rows = quote(is.na(gear) & mpg == 3),
merge = TRUE)
split(mtcars,
mtcars$gear) %>%
lapply(FUN = function(x) bind_rows(data.frame(mpg = x$gear[1]),
x)) %>%
bind_rows() %>%
dust(caption = "Table Sectioned with a Row Barrier",
label = "row-barrier") %>%
sprinkle(logical_rows = quote(is.na(gear)),
cols = "mpg",
fn = quote(sprintf("Gear = %s", value)))
split(mtcars,
mtcars$gear) %>%
lapply(FUN = function(x) bind_rows(data.frame(mpg = x$gear[1]),
x)) %>%
bind_rows() %>%
dust(caption = "Table Sectioned with a Row Barrier",
label = "row-barrier") %>%
sprinkle(logical_rows = quote(is.na(gear)),
cols = "mpg",
fn = quote(sprintf("Gear = %s", value))) %>%
sprinkle(logical_rows = quote(mpg == 3),
merge = TRUE)
split(mtcars,
mtcars$gear) %>%
lapply(FUN = function(x) bind_rows(data.frame(mpg = x$gear[1]),
x)) %>%
bind_rows() %>%
dust(caption = "Table Sectioned with a Row Barrier",
label = "row-barrier") %>%
sprinkle(logical_rows = quote(is.na(gear)),
cols = "mpg",
fn = quote(sprintf("Gear = %s", value)))
split(mtcars,
mtcars$gear) %>%
lapply(FUN = function(x) bind_rows(data.frame(mpg = x$gear[1]),
x)) %>%
bind_rows() %>%
dust(caption = "Table Sectioned with a Row Barrier",
label = "row-barrier") %>%
sprinkle(logical_rows = quote(is.na(gear)),
cols = "mpg",
fn = quote(sprintf("Gear = %s", value))) %>%
sprinkle(rows = 1,
merge = TRUE)
split(mtcars,
mtcars$gear) %>%
lapply(FUN = function(x) bind_rows(data.frame(mpg = x$gear[1]),
x)) %>%
bind_rows() %>%
dust(caption = "Table Sectioned with a Row Barrier",
label = "row-barrier") %>%
sprinkle(logical_rows = quote(is.na(gear)),
cols = "mpg",
fn = quote(sprintf("Gear = %s", value))) %>%
sprinkle(rows = 1,
merge = TRUE,
halign = "left")
split(mtcars,
mtcars$gear) %>%
lapply(FUN = function(x) bind_rows(data.frame(mpg = x$gear[1]),
x)) %>%
bind_rows() %>%
dust(caption = "Table Sectioned with a Row Barrier",
label = "row-barrier") %>%
sprinkle(logical_rows = quote(is.na(gear)),
cols = "mpg",
fn = quote(sprintf("Gear = %s", value))) %>%
sprinkle(rows = 1,
merge = TRUE,
halign = "left") %>%
sprinkle(rows = 17,
merge = TRUE,
halign = "left")
split(mtcars,
mtcars$gear) %>%
lapply(FUN = function(x) bind_rows(data.frame(mpg = x$gear[1]),
x)) %>%
bind_rows() %>%
dust(caption = "Table Sectioned with a Row Barrier",
label = "row-barrier") %>%
sprinkle(logical_rows = quote(is.na(gear)),
cols = "mpg",
fn = quote(sprintf("Gear = %s", value))) %>%
sprinkle(rows = 1,
merge = TRUE,
halign = "left") %>%
sprinkle(rows = 17,
merge = TRUE,
halign = "left") %>%
sprinkle(rows = 30,
merge = TRUE)
split(mtcars,
mtcars$gear) %>%
lapply(FUN = function(x) bind_rows(data.frame(mpg = x$gear[1]),
x)) %>%
bind_rows() %>%
dust(caption = "Table Sectioned with a Row Barrier",
label = "row-barrier") %>%
sprinkle(logical_rows = quote(is.na(gear)),
cols = "mpg",
fn = quote(sprintf("Gear = %s", value))) %>%
sprinkle(rows = 1,
merge = TRUE,
halign = "left") %>%
sprinkle(rows = 17,
merge = TRUE,
halign = "left") %>%
sprinkle(rows = 30,
merge = TRUE,
halign = "left")
split(mtcars,
mtcars$gear) %>%
lapply(FUN = function(x) bind_rows(data.frame(mpg = x$gear[1]),
x)) %>%
bind_rows() %>%
dust(caption = "Table Sectioned with a Row Barrier",
label = "row-barrier") %>%
sprinkle(logical_rows = quote(is.na(gear)),
cols = "mpg",
fn = quote(sprintf("Gear = %s", value))) %>%
sprinkle(rows = 1,
merge = TRUE,
halign = "left",
bg = "#DDDDDD") %>%
sprinkle(rows = 17,
merge = TRUE,
halign = "left",
bg = "#DDDDDD") %>%
sprinkle(rows = 30,
merge = TRUE,
halign = "left",
bg = "#DDDDDD")
split(mtcars,
mtcars$gear) %>%
lapply(FUN = function(x) bind_rows(data.frame(mpg = x$gear[1]),
x)) %>%
bind_rows() %>%
dust(caption = "Table Sectioned with a Row Barrier",
label = "row-barrier") %>%
medley_bw() %>%
sprinkle(logical_rows = quote(is.na(gear)),
cols = "mpg",
fn = quote(sprintf("Gear = %s", value))) %>%
sprinkle(rows = 1,
merge = TRUE,
halign = "left",
bg = "#DDDDDD") %>%
sprinkle(rows = 17,
merge = TRUE,
halign = "left",
bg = "#DDDDDD") %>%
sprinkle(rows = 30,
merge = TRUE,
halign = "left",
bg = "#DDDDDD")
split(mtcars,
mtcars$gear) %>%
dust(caption = "Table Sectioned with a Row Barrier",
label = "row-barrier") %>%
medley_bw()
split(mtcars,
mtcars$gear) %>%
dust(caption = "Table Sectioned with a Row Barrier",
label = "row-barrier") %>%
medley_bw() %>%
sprinkle(bg_pattern_by = "rows")
split(mtcars,
mtcars$gear) %>%
dust(caption = "Table Sectioned with a Row Barrier",
label = "row-barrier") %>%
sprinkle(bg_pattern_by = "rows")
split(mtcars,
mtcars$gear) %>%
dust(caption = "Table Sectioned with a Row Barrier",
label = "row-barrier") %>%
sprinkle(bg_pattern_by = "rows") %>%
medley_bw()
?pixieply
split(mtcars,
mtcars$gear) %>%
dust(caption = "Table Sectioned with a Row Barrier",
label = "row-barrier") %>%
sprinkle(bg_pattern_by = "rows") %>%
pixieply(medley_bw)
split(mtcars,
mtcars$gear) %>%
dust(caption = "Table Sectioned with a Row Barrier",
label = "row-barrier") %>%
sprinkle(bg_pattern_by = "rows") %>%
pixieply(medley_bw) %>%
print(asis = FALSE) %>%
cat()
split(mtcars,
mtcars$gear) %>%
dust(caption = "Table Sectioned with a Row Barrier",
label = "row-barrier") %>%
sprinkle(bg_pattern_by = "rows") %>%
pixieply(medley_bw) %>%
print(asis = FALSE)
set_pixie_count(0)
bookdown::render_book("index.Rmd",
output_dir = getwd())
set_pixie_count(0)
bookdown::render_book("index.Rmd",
output_dir = getwd())
set_pixie_count(0)
bookdown::render_book("index.Rmd",
output_dir = getwd())
library(survival)
ovarian
?sprinkle
library(survival)
ovarian %>%
arrange(futime) %>%
dust(caption = "Arrange a Table by Time and Using Background Colors to Identify Events",
label = "temporal-table") %>%
sprinkle(bg_pattern = "rows") %>%
sprinkle(rows = "fustat",
discrete = "bg",
discrete_color = palette[c(3, 7)])
ovarian %>%
arrange(futime) %>%
dust(caption = "Arrange a Table by Time and Using Background Colors to Identify Events",
label = "temporal-table") %>%
sprinkle(bg_pattern = "rows") %>%
sprinkle(row = "fustat",
discrete = "bg",
discrete_color = palette[c(3, 7)])
ovarian %>%
arrange(futime) %>%
dust(caption = "Arrange a Table by Time and Using Background Colors to Identify Events",
label = "temporal-table") %>%
sprinkle(bg_pattern = "rows") %>%
sprinkle(row = "fustat",
discrete = "bg",
discrete_color = palette[c(3, 7)])
ovarian %>%
arrange(futime) %>%
dust(caption = "Arrange a Table by Time and Using Background Colors to Identify Events",
label = "temporal-table")
ovarian %>%
arrange(futime) %>%
dust(caption = "Arrange a Table by Time and Using Background Colors to Identify Events",
label = "temporal-table") %>%
sprinkle(bg_pattern_by = "rows")
ovarian %>%
arrange(futime) %>%
dust(caption = "Arrange a Table by Time and Using Background Colors to Identify Events",
label = "temporal-table") %>%
sprinkle(bg_pattern_by = "rows") %>%
sprinkle(cols = "fustat",
discrete = "bg",
discrete_color = palette[c(3, 7)])
set_pixie_count(0)
bookdown::render_book("index.Rmd",
output_dir = getwd())
split(mtcars,
mtcars$gear) %>%
dust(caption = "Table Sectioned with a Row Barrier",
label = "row-barrier") %>%
sprinkle(bg_pattern_by = "rows") %>%
sprinkle(cols = "mpg",
gradient = "bg",
gradient_color = palette[c(2, 8)]) %>%
pixieply(medley_bw)
set_pixie_count(0)
bookdown::render_book("index.Rmd",
output_dir = getwd())
set_pixie_count(0)
bookdown::render_book("index.Rmd",
output_dir = getwd())
split(mtcars,
mtcars$gear) %>%
dust(caption = "Table Sectioned with a Row Barrier",
label = "row-barrier") %>%
sprinkle(bg_pattern_by = "rows") %>%
sprinkle(cols = "mpg",
gradient = "bg",
gradient_color = palette[c(2, 8)],
gradient_cut = quantile(mtcars$mpg,
probs = seq(0, 1, length.out = 10))) %>%
pixieply(medley_bw)
quantile(mtcars$mpg,
probs = seq(0, 1, length.out = 10))
set_pixie_count(0)
bookdown::render_book("index.Rmd",
output_dir = getwd())
?cut
?quantile
set_pixie_count(0)
bookdown::render_book("index.Rmd",
output_dir = getwd())
?render_book
bookdown::render_book("index.Rmd",
output_dir = getwd(),
clean_envir = TRUE)
bookdown::render_book("index.Rmd",
output_dir = getwd(),
clean_envir = TRUE)
set_pixie_count(0)
bookdown::render_book("index.Rmd",
output_dir = getwd())
head(mtcars) %>%
dust(caption = "A table with minimal formatting",
label = "medley-plain")
object = dust(head(mtcars))
max(object$body$row)
medley_mine <- function(object)
{
last_row <- max(object$body$row)
object %>%
sprinkle(rows = 1,
border = "top",
part = "head") %>%
sprinkle(rows = last_row,
border = "bottom")
}
head(mtcars) %>%
dust(caption = "A table with minimal formatting",
label = "medley-plain") %>%
medley_mine()
medley_mine <- function(object)
{
last_row <- max(object$body$row)
object %>%
sprinkle(rows = 1,
border = "top",
part = "head") %>%
sprinkle(rows = last_row,
border = "bottom") %>%
sprinkle(bg_pattern = palette[c(4, 6)])
}
head(mtcars) %>%
dust(caption = "A table with minimal formatting",
label = "medley-plain") %>%
medley_mine()
medley_mine <- function(object)
{
last_row <- max(object$body$row)
object %>%
sprinkle(rows = 1,
border = "top",
part = "head") %>%
sprinkle(rows = last_row,
border = "bottom") %>%
sprinkle(bg_pattern = palette[c(3, 7)])
}
head(mtcars) %>%
dust(caption = "A table with minimal formatting",
label = "medley-plain") %>%
medley_mine()
medley_mine <- function(object, stripe = TRUE)
{
last_row <- max(object$body$row)
object <-
object %>%
sprinkle(rows = 1,
border = "top",
part = "head") %>%
sprinkle(rows = last_row,
border = "bottom")
if (stripe)
{
object %>%
sprinkle(bg_pattern = palette[c(3, 7)])
}
else
{
object
}
}
head(mtcars) %>%
dust(caption = "A table with a little formatting and optional striping",
label = "medley-plain") %>%
medley_mine(stripe = FALSE)
set_pixie_count(0)
bookdown::render_book("index.Rmd",
output_dir = getwd())
set_pixie_count(0)
bookdown::render_book("index.Rmd",
output_dir = getwd())
set_pixie_count(0)
bookdown::render_book("index.Rmd",
output_dir = getwd())
set_pixie_count(0)
bookdown::render_book("index.Rmd",
output_dir = getwd())
set_pixie_count(0)
bookdown::render_book("index.Rmd",
output_dir = getwd())

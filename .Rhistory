tidy_obj <- tidy(obj)
split_obj <- split(tidy_obj, tidy_obj[-c(1, 2, ncol(tidy_obj))])
split_obj <-
lapply(split_obj,
function(x) x[, c(1, 2, ncol(x))])
split_obj <-
lapply(split_obj,
function(x) spread_(x, names(x)[2], names(x)[3]))
head <-
rbind(c("", dimnames[2], rep("", ncol(obj) - 1)),
c(dimnames[1], colnames(obj))) %>%
as.data.frame(stringsAsFactors = FALSE)
latex_tables <-
dust(split_obj) %>%
redust(head, part = "head")  %>%
sprinkle(rows = 1,
cols = 2:4,
merge = TRUE,
part = "head") %>%
medley_bw() %>%
sprinkle_print_method("latex")
Strata <-
select_(tidy_obj,
.dots = names(tidy_obj)[-c(1, 2, ncol(tidy_obj))]) %>%
distinct_(.dots = names(.))
captions <-
lapply(names(Strata),
function(x) sprintf("%s = %s", x, Strata[[x]])) %>%
as.data.frame(stringsAsFactors = FALSE) %>%
apply(., MARGIN = 1, FUN = paste, collapse = "; ")
x <- mapply(sprinkle,
latex_tables,
caption = captions,
SIMPLIFY = FALSE)
x[[1]]
x$print_method
names(x[[1]])
x[[1]]$print_method
obj <- with(test, table(Apples, Oranges, Watermelons))
tidy_obj <- tidy(obj)
split_obj <- split(tidy_obj, tidy_obj[-c(1, 2, ncol(tidy_obj))])
split_obj <-
lapply(split_obj,
function(x) x[, c(1, 2, ncol(x))])
split_obj <-
lapply(split_obj,
function(x) spread_(x, names(x)[2], names(x)[3]))
head <-
rbind(c("", dimnames[2], rep("", ncol(obj) - 1)),
c(dimnames[1], colnames(obj))) %>%
as.data.frame(stringsAsFactors = FALSE)
(latex_tables <-
dust(split_obj) %>%
redust(head, part = "head")  %>%
sprinkle(rows = 1,
cols = 2:4,
merge = TRUE,
part = "head") %>%
medley_bw() %>%
sprinkle_print_method("latex"))
Strata <-
select_(tidy_obj,
.dots = names(tidy_obj)[-c(1, 2, ncol(tidy_obj))]) %>%
distinct_(.dots = names(.))
captions <-
lapply(names(Strata),
function(x) sprintf("%s = %s", x, Strata[[x]])) %>%
as.data.frame(stringsAsFactors = FALSE) %>%
apply(., MARGIN = 1, FUN = paste, collapse = "; ")
captions
i = 1
sprinkle(latex_tables[i],
caption = captions[i])
sprinkle(latex_tables[i],
rows = 1,
caption = captions[i])
sprinkle(latex_tables[i],
rows = 1,
cols = 1,
caption = captions[i])
latex_tables[i]
latex_tables
latex_tables[[i]]
sprinkle(latex_tables[[i]],
rows = 1,
cols = 1,
caption = captions[i])
sprinkle(latex_tables[[i]],
caption = captions[i])
ndim_table <- function(object, print_method = "latex")
{
require(broom)
require(pixiedust)
require(tidyr)
tidy_object <- broom::tidy(object)
split_obj <-
split(tidy_obj,
tidy_obj[-c(1, 2, ncol(tidy_obj))]) %>%
lapply(.,
function(x) x[, c(1, 2, ncol(x))]) %>%
lapply(.,
function(x) tidyr::spread_(x, names(x)[2], names(x)[3]))
head <-
rbind(c("", dimnames[2], rep("", ncol(obj) - 1)),
c(dimnames[1], colnames(obj))) %>%
as.data.frame(stringsAsFactors = FALSE)
output_tables <-
pixiedust::dust(split_obj,
longtable = TRUE) %>%
pixiedust::redust(head, part = "head")  %>%
pixiedust::sprinkle(rows = 1,
cols = 2:4,
merge = TRUE,
part = "head") %>%
pixiedust::medley_bw() %>%
pixiedust::sprinkle_print_method(print_method)
Strata <-
dplyr::select_(tidy_obj,
.dots = names(tidy_obj)[-c(1, 2, ncol(tidy_obj))]) %>%
dplyr::distinct_(.dots = names(.))
captions <-
lapply(names(Strata),
function(x) sprintf("%s = %s", x, Strata[[x]])) %>%
as.data.frame(stringsAsFactors = FALSE) %>%
apply(., MARGIN = 1, FUN = paste, collapse = "; ")
for(i in seq_along(latex_tables))
{
latex_tables[[i]] <- sprinkle(latex_tables[[i]],
caption = captions[i])
}
latex_tables
}
rm(list = ls())
ndim_table <- function(object, print_method = "latex")
{
require(broom)
require(pixiedust)
require(tidyr)
tidy_object <- broom::tidy(object)
split_obj <-
split(tidy_obj,
tidy_obj[-c(1, 2, ncol(tidy_obj))]) %>%
lapply(.,
function(x) x[, c(1, 2, ncol(x))]) %>%
lapply(.,
function(x) tidyr::spread_(x, names(x)[2], names(x)[3]))
head <-
rbind(c("", dimnames[2], rep("", ncol(obj) - 1)),
c(dimnames[1], colnames(obj))) %>%
as.data.frame(stringsAsFactors = FALSE)
output_tables <-
pixiedust::dust(split_obj,
longtable = TRUE) %>%
pixiedust::redust(head, part = "head")  %>%
pixiedust::sprinkle(rows = 1,
cols = 2:4,
merge = TRUE,
part = "head") %>%
pixiedust::medley_bw() %>%
pixiedust::sprinkle_print_method(print_method)
Strata <-
dplyr::select_(tidy_obj,
.dots = names(tidy_obj)[-c(1, 2, ncol(tidy_obj))]) %>%
dplyr::distinct_(.dots = names(.))
captions <-
lapply(names(Strata),
function(x) sprintf("%s = %s", x, Strata[[x]])) %>%
as.data.frame(stringsAsFactors = FALSE) %>%
apply(., MARGIN = 1, FUN = paste, collapse = "; ")
for(i in seq_along(latex_tables))
{
latex_tables[[i]] <- sprinkle(latex_tables[[i]],
caption = captions[i])
}
latex_tables
}
mtcars
with(mtcars, table(am, vs, gear, carb))
with(mtcars, table(am, vs, gear, carb))
object = with(mtcars, table(am, vs, gear, carb))
require(broom)
require(dplyr)
require(pixiedust)
require(tidyr)
tidy_object <- broom::tidy(object)
split_object <-
split(tidy_object,
tidy_object[-c(1, 2, ncol(tidy_object))]) %>%
lapply(.,
function(x) x[, c(1, 2, ncol(x))]) %>%
lapply(.,
function(x) tidyr::spread_(x, names(x)[2], names(x)[3]))
split_object
rbind(c("", dimnames[2], rep("", ncol(object) - 1)),
c(dimnames[1], colnames(object))) %>%
as.data.frame(stringsAsFactors = FALSE)
dimnames(object)
rbind(c("", dimnames(object)[2], rep("", ncol(object) - 1)),
c(dimnames(object)[1], colnames(object))) %>%
as.data.frame(stringsAsFactors = FALSE)
dimnames(object)
rbind(c("", names(dimnames(object))[2], rep("", ncol(object) - 1)),
c(names(dimnames(object))[1], colnames(object))) %>%
as.data.frame(stringsAsFactors = FALSE)
require(broom)
require(dplyr)
require(pixiedust)
require(tidyr)
tidy_object <- broom::tidy(object)
split_object <-
split(tidy_object,
tidy_object[-c(1, 2, ncol(tidy_object))]) %>%
lapply(.,
function(x) x[, c(1, 2, ncol(x))]) %>%
lapply(.,
function(x) tidyr::spread_(x, names(x)[2], names(x)[3]))
head <-
rbind(c("", names(dimnames(object))[2], rep("", ncol(object) - 1)),
c(names(dimnames(object))[1], colnames(object))) %>%
as.data.frame(stringsAsFactors = FALSE)
head
split_object
pixiedust::dust(split_object,
longtable = TRUE) %>%
pixiedust::redust(head, part = "head")  %>%
pixiedust::sprinkle(rows = 1,
cols = 2:4,
merge = TRUE,
part = "head") %>%
pixiedust::medley_bw()
output_tables <-
pixiedust::dust(split_object,
longtable = TRUE) %>%
pixiedust::redust(head, part = "head")  %>%
pixiedust::sprinkle(rows = 1,
cols = 2:4,
merge = TRUE,
part = "head") %>%
pixiedust::medley_bw() %>%
pixiedust::sprinkle_print_method(print_method)
print_method = "latex"
output_tables <-
pixiedust::dust(split_object,
longtable = TRUE) %>%
pixiedust::redust(head, part = "head")  %>%
pixiedust::sprinkle(rows = 1,
cols = 2:4,
merge = TRUE,
part = "head") %>%
pixiedust::medley_bw() %>%
pixiedust::sprinkle_print_method(print_method)
Strata <-
dplyr::select_(tidy_object,
.dots = names(tidy_object)[-c(1, 2, ncol(tidy_object))]) %>%
dplyr::distinct_(.dots = names(.))
Strata
lapply(names(Strata),
function(x) sprintf("%s = %s", x, Strata[[x]])) %>%
as.data.frame(stringsAsFactors = FALSE) %>%
apply(., MARGIN = 1, FUN = paste, collapse = "; ")
devtools::install_local("C:/Users/Nutter/Documents/GitHub/pixiedust")
library(pixiedust)
fit <- lm(mpg ~ qsec + factor(am) + wt * factor(gear), data = mtcars)
x <- dust(fit,
justify = "left") %>%
sprinkle(justify = "right")
x$justify
devtools::install_local("C:/Users/Nutter/Documents/GitHub/pixiedust")
dust(mtcars,
caption = "mtcars Data Set",
float = FALSE,
justify = "right") %>%
medley_bw() %>%
sprinkle_print_method("latex") %>%
print(asis = FALSE)
dust(mtcars,
caption = "mtcars Data Set",
float = FALSE,
justify = "right") %>%
medley_bw() %>%
sprinkle_print_method("latex") %>%
print(asis = FALSE) %>%
cat()
library(pixiedust)
dust(mtcars,
caption = "mtcars Data Set",
float = TRUE,
justify = "center") %>%
medley_bw() %>%
sprinkle_print_method("latex") %>%
print(asis = FALSE) %>%
cat()
devtools::install_local("C:/Users/Nutter/Documents/GitHub/pixiedust")
devtools::install_local("C:/Users/Nutter/Documents/GitHub/pixiedust")
devtools::install_local("C:/Users/Nutter/Documents/GitHub/pixiedust")
devtools::install_local("C:/Users/Nutter/Documents/GitHub/pixiedust")
opts_knit$get("rmarkdown.pandoc.to")
knitr::opts_knit$get("rmarkdown.pandoc.to")
devtools::install_local("C:/Users/Nutter/Documents/GitHub/pixiedust")
print_method <- knitr::opts_knit$get("rmarkdown.pandoc.to")
if (is.null(print_method)) print_method <- getOption("pixiedust_print_method")
print_method
devtools::document("C:/Users/Nutter/Documents/GitHub/pixiedust")
devtools::install_local("C:/Users/Nutter/Documents/GitHub/pixiedust")
dust(mtcars,
caption = "mtcars Data Set",
float = TRUE,
justify = "left") %>%
medley_bw()
?kable
devtools::document("C:/Users/Nutter/Documents/GitHub/pixiedust")
devtools::test("C:/Users/Nutter/Documents/GitHub/pixiedust")
source("https://gist.githubusercontent.com/nutterb/f9fb89d35766022b0f75c90b24d45033/raw/e48041dcccee51f7cfada65df13b844c69833114/directorySearch")
directorySearch("C:/Users/Nutter/Documents/GitHub/pixiedust/R",
"opt_current")
devtools::test("C:/Users/Nutter/Documents/GitHub/pixiedust")
dust(mtcars %>%
dplyr::group_by(am, vs))
expect_silent(
dust(mtcars %>%
dplyr::group_by(am, vs))
)
expect_silent(
dust(mtcars %>%
dplyr::group_by(am, vs),
ungroup = FALSE)
)
devtools::test("C:/Users/Nutter/Documents/GitHub/pixiedust")
devtools::test("C:/Users/Nutter/Documents/GitHub/pixiedust")
devtools::check("C:/Users/Nutter/Documents/GitHub/pixiedust",
args = "--as-cran")
devtools::document("C:/Users/Nutter/Documents/GitHub/pixiedust")
devtools::test("C:/Users/Nutter/Documents/GitHub/pixiedust")
devtools::check("C:/Users/Nutter/Documents/GitHub/pixiedust",
args = "--as-cran")
bookdown::render_book("index.Rmd")
bookdown::render_book("index.Rmd")
bookdown::render_book("index.Rmd")
bookdown::render_book("index.Rmd")
bookdown::render_book("index.Rmd")
bookdown::render_book("index.Rmd", output_dir = .)
bookdown::render_book("index.Rmd", output_dir = "")
bookdown::render_book("index.Rmd", output_dir = getwd())
bookdown::render_book("index.Rmd")
?bookdown::render_book
bookdown::render_book("index.Rmd")
bookdown::render_book("index.Rmd")
bookdown::render_book("index.Rmd")
bookdown::render_book("index.Rmd")
bookdown::render_book("index.Rmd")
bookdown::render_book("index.Rmd", output_dir(getwd()))
bookdown::render_book("index.Rmd", output_dir = getwd())
bookdown::render_book("index.Rmd")
bookdown::render_book("index.Rmd", output_dir = getwd())
bookdown::render_book("index.Rmd", output_dir = getwd())
bookdown::render_book("index.Rmd", output_dir = getwd())
Example <- data.frame(sample_id = 1:5,
random = rnorm(5))
Example
data.frame(sample_id = 1:5,
random = rnorm(5)) %>%
dust() %>%
sprinkle(rows = 1:3,
round = 2) %>%
sprinkle(rows = 4:5,
round = 3)
data.frame(sample_id = 1:5,
random = rnorm(5)) %>%
dust() %>%
sprinkle(rows = 1:3,
round = 2) %>%
sprinkle(rows = 4:5,
round = 4)
data.frame(sample_id = 1:5,
random = rnorm(5)) %>%
dust() %>%
sprinkle(rows = 1:3,
round = 2) %>%
sprinkle(rows = 4:5,
round = 4)
bookdown::render_book("index.Rmd", output_dir = getwd())
bookdown::render_book("index.Rmd", output_dir = getwd())
bookdown::render_book("index.Rmd", output_dir = getwd())
bookdown::render_book("index.Rmd", output_dir = getwd())
bookdown::render_book("index.Rmd", output_dir = getwd())
bookdown::render_book("index.Rmd", output_dir = getwd())
bookdown::render_book("index.Rmd", output_dir = getwd())
bookdown::render_book("index.Rmd", output_dir = getwd())
bookdown::render_book("index.Rmd", output_dir = getwd())
library(help = pixiedust)
?pixie_count
?sprinkle
bookdown::render_book("index.Rmd", output_dir = getwd())
bookdown::render_book("index.Rmd", output_dir = getwd())
colors()
?colors
bookdown::render_book("index.Rmd", output_dir = getwd())
bookdown::render_book("index.Rmd", output_dir = getwd())
bookdown::render_book("index.Rmd", output_dir = getwd())
bookdown::render_book("index.Rmd", output_dir = getwd())
fit <- lm(mpg ~ qsec + factor(am) + wt, data = mtcars)
library(dplyr)
library(ggplot2)
library(magrittr)
library(pixiedust)
library(RColorBrewer)
library(tidyr)
palette <- brewer.pal(9, "PRGn")
dust(fit)
fit <- lm(mpg ~ qsec + factor(am) + wt + factor(gear), data = mtcars)
dust(fit)
fit <- lm(mpg ~ qsec + factor(gear) + wt, data = mtcars)
dust(fit)
colors()
sample(colors(), 1)
bookdown::render_book("index.Rmd", output_dir = getwd())
bookdown::render_book("index.Rmd", output_dir = getwd())
col2rgb("lightgreen")
256^3
length(colors())
as.hex(col2rgb("lightgreen"))
as.hexmode(col2rgb("lightgreen"))
as.hexmode(col2rgb("lightgreen"))
bookdown::render_book("index.Rmd", output_dir = getwd())
bookdown::render_book("index.Rmd", output_dir = getwd())
as.hexmode(50)
as.hexmode(128)
as.hexmode(128)
bookdown::render_book("index.Rmd", output_dir = getwd())
?sprinkle
bookdown::render_book("index.Rmd", output_dir = getwd())
bookdown::render_book("index.Rmd", output_dir = getwd())
as.hexmode(255)
as.hexmode(255/2)
as.hexmode(127)
as.hexmode(63)
bookdown::render_book("index.Rmd", output_dir = getwd())
dust(fit) %>%
sprinkle(rows = 2,
bg = "#0000003F") %>%
sprinkle(rows = 4,
bg = "rgba(00,00,00,.25)")
dust(fit) %>%
sprinkle(rows = 2,
bg = "#FFFFFF3F") %>%
sprinkle(rows = 4,
bg = "rgba(00,00,00,.25)")
dust(fit) %>%
sprinkle(rows = 2,
bg = "#000000.5") %>%
sprinkle(rows = 4,
bg = "rgba(00,00,00,.25)")
dust(fit) %>%
sprinkle(rows = 2,
bg = "#0000003F") %>%
sprinkle(rows = 4,
bg = "rgba(00,00,00,.25)")
dust(fit) %>%
sprinkle(rows = 2,
bg = "#0000003F") %>%
sprinkle(rows = 4,
bg = "rgba(00,00,00,.25)")
bookdown::render_book("index.Rmd", output_dir = getwd())
bookdown::render_book("index.Rmd", output_dir = getwd())
bookdown::render_book("index.Rmd", output_dir = getwd())
dust(fit) %>%
sprinkle(rows = 2,
bg = "#0000003F") %>%
sprinkle(rows = 4,
bg = "rgba(00,00,00,.25)") %>%
sprinkle_print_method("html") %>%
print(asis = FALSE) %>% cat
bookdown::render_book("index.Rmd", output_dir = getwd())
?sprinkle
bookdown::render_book("index.Rmd", output_dir = getwd())
bookdown::render_book("index.Rmd", output_dir = getwd())
?bookdown::render_book
bookdown::render_book("index.Rmd", output_dir = getwd(), output_format = bookdown::pdf_document2())
bookdown::render_book("index.Rmd", output_dir = getwd(), output_format = bookdown::pdf_document2())
bookdown::render_book("index.Rmd", output_dir = getwd(), output_format = bookdown::pdf_document2())
bookdown::render_book("index.Rmd", output_dir = getwd(), output_format = bookdown::pdf_document2())
bookdown::render_book("index.Rmd", output_dir = getwd(), output_format = bookdown::pdf_document2())
bookdown::render_book("index.Rmd", output_dir = getwd(), output_format = bookdown::pdf_document2())
bookdown::render_book("index.Rmd", output_dir = getwd(), output_format = bookdown::pdf_document2())
bookdown::render_book("index.Rmd", output_dir = getwd(), output_format = bookdown::pdf_document2())
bookdown::render_book("index.Rmd", output_dir = getwd(), output_format = bookdown::pdf_document2())
bookdown::render_book("index.Rmd", output_dir = getwd(), output_format = bookdown::pdf_document2())
bookdown::render_book("index.Rmd", output_dir = getwd(), output_format = bookdown::pdf_document2())
bookdown::render_book("index.Rmd", output_dir = getwd(), output_format = bookdown::pdf_document2())
bookdown::render_book("index.Rmd", output_dir = getwd(), output_format = bookdown::pdf_book())
bookdown::render_book("index.Rmd", output_dir = getwd(), output_format = bookdown::pdf_book())
bookdown::render_book("index.Rmd", output_dir = getwd(), output_format = bookdown::pdf_book())
bookdown::render_book("index.Rmd", output_dir = getwd())
bookdown::render_book("index.Rmd", output_dir = getwd())
bookdown::render_book("index.Rmd", output_dir = getwd(), output_format = bookdown::pdf_document2())
bookdown::render_book("index.Rmd", output_dir = getwd(), output_format = bookdown::pdf_document2())
bookdown::render_book("index.Rmd", output_dir = getwd(), output_format = bookdown::pdf_document2())
bookdown::render_book("index.Rmd", output_dir = getwd(), output_format = bookdown::pdf_document2())
bookdown::render_book("index.Rmd", output_dir = getwd(), output_format = bookdown::pdf_document2())
bookdown::render_book("index.Rmd", output_dir = getwd(), output_format = bookdown::pdf_book())
bookdown::render_book("index.Rmd", output_dir = getwd())
bookdown::render_book("index.Rmd", output_dir = getwd())
getwd()
bookdown::render_book("index.Rmd", output_dir = getwd())
bookdown::render_book("index.Rmd", output_dir = getwd())
bookdown::render_book("index.Rmd", output_dir = getwd())
bookdown::render_book("index.Rmd", output_dir = getwd())
knitr::kable(mtcars)
knitr::kable(mtcars)
bookdown::render_book("index.Rmd", output_dir = getwd())
bookdown::render_book("index.Rmd", output_dir = getwd())
bookdown::render_book("index.Rmd", output_dir = getwd())
